import groovy.xml.*

include 'Servers'
include 'Classes'
include 'Common'
include 'Stanford'
include 'Masc'

if (!args.version) {
	println "No version number specified."
	return	
}

def masc = MascFactory.new(servers.localhost, '1.3.0')
def dsIt = DatasourceIterator.new(masc.text, 0, 20)

//def id = servers.default == servers.vassar ? 'anc' : 'picard'
//def version = args.version ?: '1.2.0'
def stanford = StanfordServices.new(servers.localhost, args.version)

def pipeline = ApplicationFactory.create()
pipeline.verbose()
pipeline << stanford.splitter
pipeline << stanford.tokenizer
pipeline << stanford.tagger
pipeline << stanford.ner

File destination = new File('/tmp/stanford')
if (!destination.exists()) {
	if (!destination.mkdirs()) {
		println "Unable to create ${destination.path}"
		System.exit(1)
	}
}

int counter = 0
while (dsIt.hasNext()) {
	String key = dsIt.key()
	String title = getTitle(key)
	++counter
	println "${counter}. Processing ${title} (${key})"

	Data document = dsIt.next()
	Data result = pipeline.execute(document)
	check(result)
	File file = new File(destination, "${title}.json")
	file.text = new Container(result.payload).toPrettyJson()
	println "Wrote ${file.path}"
}
println "Done."
