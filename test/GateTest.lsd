
include 'LAPPS'
include 'Masc'
include 'Common'
include 'Gate'
include 'Converters'

def masc = MascData.new(Nodes.vassar, '1.4.2')
def convert = ConverterServices.new(Nodes.vassar, '0.4.0')
def provider = GateServices.new(Nodes.vassar, '1.3.5')

String outpath = args.out ?: '/Users/suderman/Desktop/Gate'
File outdir = new File(outpath)
if (!outdir.exists()) {
	if (!outdir.mkdirs()) {
		println "Unable to create ${outpath}"
		return
	}
}

def services = []
services << provider.tokenizer
services << provider.gazetteer
services << provider.splitter
services << provider.tagger
services << provider.ner
services << convert.gate2json

def index = masc.text.list()
index.each { key ->
	Data data = masc.text.get(key)
	services.each { service ->
		println "Calling ${service.endpoint}"
		data = service.execute(data)
		check(data)
	}
	def container = new Container(data.payload)
	File outfile = new File(outdir, "${key}.json")
	outfile.text = container.toPrettyJson()	
	println "Wrote ${outfile.path}"
}

println "Done."
