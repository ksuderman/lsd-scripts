/*
 * This script prints the annotations that each service require and produce.
 */
 
include 'LAPPS'
include 'Common'
include 'Services'

boolean showGate = false
boolean showStanford = false

if (args.size() == 0) {
    showGate = true
    showStanford = true
}
if (args.gate || args.both) {
    showGate = true
}
if (args.stanford || args.both) {
    showStanford = true
}

// Define a helper method to get the Discriminator names for each
// discriminator in the list.
String toString(types) {
	def names = []
	types.each { type ->
		names.add(DiscriminatorRegistry.get(type))
	}
	return names.join(", ")
}

def dump = { provider ->
    provider.each { name, service ->
        println name
        producesRequires(service)
        println()
    }
}

if (showGate) {
    def gate = ServiceFactory.create(Nodes.localhost, '1.3.2-SNAPSHOT')
    println "GATE Services"
    println "-------------"
    dump(gate)
}

if (showStanford) {
    def stanford = StanfordServices.new(Nodes.localhost, '1.3.1')
    println "Stanford Services"
    println "-----------------"
    dump(stanford)
}

/*
// Display what each service requires and produces.
services.each { name, service ->
	println "${name}"
	println "\trequires ${toString(service.requires())}"
	println "\tproduces ${toString(service.produces())}"
	println()
}
*/
	
